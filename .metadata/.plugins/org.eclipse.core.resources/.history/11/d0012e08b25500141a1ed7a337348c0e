import com.mongodb.*;

import java.io.IOException;
import java.net.UnknownHostException;
import java.util.List;
import java.util.Set;
import java.io.*;

import static java.util.concurrent.TimeUnit.SECONDS;

public class Generate extends Randomness {
	
	// Declare the database collections
	private static DB db;
	private static DBCollection influencers = db.getCollection("influencer");
	private static DBCollection securityCollection = db.getCollection("security");
	private static DBCollection users = db.getCollection("user");
	private static DBCollection advertisers = db.getCollection("advertiser");

	public static Object createUser(String primaryAccount) throws IOException {
		// Generate random user names, passwords, and email
		String firstName = randomFirstName();
		String lastName = randomLastName();
		String email = (firstName + "." + lastName + "@adswithfriends.com");
		String password = randomWord();
		String fullName = firstName + " " + lastName;
		// For testing purposes, we will set these to true
		Boolean completed = true;
		Boolean confirmed = true;
		// End previous comment
		Boolean isActive = randomBoolean();
		Boolean linkToTwitter = randomBoolean();
		// Generate a random UID
		int uid = randomNumber();
		// Generate a random birth date
		String dateOfBirth = randomDate();
		// Generate a random location
		Location location = randomLocation();
		String city = null;
		String state = location.getState();
		String country = location.getCountry();
		// Do city location check
		if(location.hasCity()) {
			city = location.getCity();
		}
		
		// Create a security profile for the user
		ObjectID securityProfile = createSecurityProfile();
		
	}
	
	private static ObjectID createSecurityProfile() throws IOException{
		// Generate the random information for security profile
		boolean resetPassword = false;
		String questionOne = randomWord();
		String questionTwo = randomWord();
		String answerOne = randomWord();
		String answerTwo = randomWord();
		int resetToken = randomNumber();
		
		// Create the security Object
		BasicDBObject profile = new BasicDBObject("resetPassword", resetPassword)
		.append("questionOne", questionOne)
		.append("questionTwo", questionTwo)
		.append("answerOne", answerOne)
		.append("anwerTwo", answerTwo)
		.append("resetToken", resetToken);
		
		// Get object id
		ObjectId thisID = (ObjectID)profile.get("_id");
		
		// insert the sercurity object into the security collection
		securityCollection.insert(profile);
		
		return thisID;
		
	}
	
	public static void generateInfluencer() throws IOException{
		MongoClient mongoClient = new MongoClient();
		DB db = mongoClient.getDB("awf_db");
		DBCollection coll = db.getCollection("user");
		
		// Add data
		// Vars
		String firstName = randomFirstName();
		String type = ("influencerAccount");
		String primaryAccount = ("Influencer");
		Boolean completed = randomBoolean();
		Boolean linkToTwitter = randomBoolean();
		String securityQuestion1 = randomWord();
		String securityQuestion2 = randomWord();
		String lastName = randomLastName();
		String dateOfBirth = randomDate();
		String fullName = (firstName + " " + lastName);
		String email = (firstName + lastName + "@example.com");
		String password = ("password");
		String export = (firstName + " " + lastName + " , " + "DOB:" + dateOfBirth + " , "  + email + " , " + password + " , " + " Security Question 1: " + securityQuestion1 + " , " + "Security Question 2: " + securityQuestion2 + " , " + type + ", Completed: " + completed);
		exportCredentials(export);
	}
	
	public static void generateAdvertiser() throws IOException {
		MongoClient mongoClient = new MongoClient();
		DB db = mongoClient.getDB("awf_db");
		DBCollection coll = db.getCollection("user");
		
		// Add data
		// Vars
		String firstName = randomFirstName();
		String type = ("advertiserAccount");
		String primaryAccount = ("Advertiser");
		Boolean completed = randomBoolean();
		String lastName = randomLastName();
		String dateOfBirth = randomDate();
		String securityQuestion1 = randomWord();
		String securityQuestion2 = randomWord();
		String fullName = (firstName + " " + lastName);
		String email = (firstName + lastName + "@example.com");
		String password = ("password");
		String export = (firstName + " " + lastName + " , " + "DOB:" + dateOfBirth + " , "  + email + " , " + password + " , " + " Security Question 1: " + securityQuestion1 + " , " + "Security Question 2: " + securityQuestion2 + " , " + type);
		exportCredentials(export);
	}
	
	public static void exportCredentials(String export) throws IOException {
		try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("/Users/steventhanna/Desktop/Programming/sails/adswithfriends/data-simulate/datasimulate/credentials.txt", true)))) {
		    out.println(export);
		}catch (IOException e) {
		    //exception handling left as an exercise for the reader
			System.out.println("HELP!");
		}
		
	}
}